# 固定前缀org.quartz
# 主要分为scheduler、threadPool、jobStore、plugin等部分
#
#
org.quartz.scheduler.instanceName=DefaultQuartzScheduler
org.quartz.scheduler.rmi.export=false
org.quartz.scheduler.rmi.proxy=false
org.quartz.scheduler.wrapJobExecutionInUserTransaction=false

# 实例化ThreadPool时，使用的线程类为SimpleThreadPool
org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool

# threadCount和threadPriority将以setter的形式注入ThreadPool实例
# 并发个数
org.quartz.threadPool.threadCount=5
# 优先级
org.quartz.threadPool.threadPriority=5
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true

org.quartz.jobStore.misfireThreshold=5000

# 默认存储在内存中(不需要配置 可以在源码中的properties中看到这个配置)
#org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore

# ――――――――――――――――――――――――――――――上面展示的是非持久话的配置――――――――――――――――――――――――――――――――――――――――――――――――――――














# ―――――――――――――――――――――下面是持久化的配置，使用时修改配置参数即可(运行脚本放在项目下的scripts，选择合的数据库即可)―――――――――――――――――――――――――――――――――――――――――――

#持久化(需要配置持久化的类型----jdbc和兵马俑两种)
org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
# 数据库表名称前缀
org.quartz.jobStore.tablePrefix=QRTZ_
# 持久化的数据库名称
org.quartz.jobStore.dataSource=quartz
# 数据库驱动类型
org.quartz.dataSource.quartz.driver=com.mysql.jdbc.Driver
# 数据库链接地址
org.quartz.dataSource.quartz.URL=jdbc:mysql://localhost:3306/quartz?useUnicode=true&characterEncoding=UTF-8
# 用户名
org.quartz.dataSource.quartz.user=root
# 密码
org.quartz.dataSource.quartz.password=123
# 最大连接数
org.quartz.dataSource.quartz.maxConnections=10
# 使用持久化配置
org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
